na = "",
quote = FALSE,
sep = ",",
dec = ".",
row.names = FALSE,
col.names = TRUE
)
bcsData %>%
nest()
bcsDataJson = bcsData %>%
nest()
bcsDataJson = bcsData %>%
toJSON(auto_unbox = TRUE, pretty = TRUE)
library(jsonlite)
bcsDataJson = bcsData %>%
toJSON(auto_unbox = TRUE, pretty = TRUE)
?toJSON
bcsDataJson = bcsData %>%
toJSON()
bcsDataJson = bcsData %>%
toJSON() %>%
write(file = paste0("../data_esi.json"))
View(bcsData)
bcsDataJson = bcsData %>%
toJSON()
bcsData %>%
toJSON() -> bcsDataJson %>%
write(file = paste0("../data_esi.json"))
bcsDataJson = bcsData %>%
toJSON(flatten = TRUE) %>%
write(file = paste0("../data_esi.json"))
bcsData %>%
toJSON(flatten = TRUE) %>%
write(file = paste0("../data_esi.json"))
bcsDataJson = bcsData %>%
toJSON(flatten = TRUE)
?nest
names(bcsData)
bcsDataJson = bcsData %>%
nest(.by = c(series, country, date))
library(tidyverse)
library(openxlsx)
library(countrycode)
time <- Sys.Date()
time <- format(time, "%y%m")
#Download Dataset - automatic
temp <- tempfile()
time <- as.numeric(time) - 1
download.file(
paste0(
"https://ec.europa.eu/economy_finance/",
"db_indicators/surveys/documents/series/nace2_ecfin_",
time,
"/main_indicators_sa_nace2.zip"
),
temp
)
bcsData <- read.xlsx(
unzip(temp, "main_indicators_nace2.xlsx"),
colNames = TRUE,
sheet = "MONTHLY",
detectDates = F
)
unlink(temp)
rm(temp)
bcsData <- bcsData %>%
mutate_all(as.numeric) %>%
rename(date = X1) %>%
mutate(date = format(convertToDate(date))) %>%
pivot_longer(
cols = 2:ncol(bcsData),
names_to = "key",
values_to = "value"
) %>%
separate(
key,
into = c("country", "series"),
"\\."
) %>%
drop_na() %>%
filter(
series %in% c(
"INDU",
"CONS",
"BUIL",
"RETA",
"SERV",
"ESI",
"EEI"
)
) %>%
mutate(
iso3 = countrycode(country, origin = "eurostat", destination = "iso3c"),
country_de = case_when(
country == "EA" ~ "Euroraum",
country == "EU" ~ "Europäische Union",
.default = countrycode(country, origin = "eurostat", destination = "country.name.de")
),
country_en = case_when(
country == "EA" ~ "Euro area",
country == "EU" ~ "European Union",
.default = countrycode(country, origin = "eurostat", destination = "country.name")
)
)
write.table(
bcsData,
file = paste0("../data_esi.csv"),
append = FALSE,
na = "",
quote = FALSE,
sep = ",",
dec = ".",
row.names = FALSE,
col.names = TRUE
)
bcsDataJson = bcsData %>%
nest(.by = c(series, country, date))
bcsDataJson = bcsData %>%
nest(.by = c(series, country, date)) %>%
toJSON(flatten = TRUE)
bcsDataJson = bcsData %>%
nest(.by = c(series, country, date)) %>%
toJSON()
?toJSON
bcsDataJson = bcsData %>%
nest(.by = c(series, country, date))
bcsDataJson
?nest
bcsDataJson = bcsData %>%
nest(.key = c(series, country, date))
library(tidyverse)
library(openxlsx)
library(countrycode)
time <- Sys.Date()
time <- format(time, "%y%m")
#Download Dataset - automatic
temp <- tempfile()
time <- as.numeric(time) - 1
download.file(
paste0(
"https://ec.europa.eu/economy_finance/",
"db_indicators/surveys/documents/series/nace2_ecfin_",
time,
"/main_indicators_sa_nace2.zip"
),
temp
)
bcsData <- read.xlsx(
unzip(temp, "main_indicators_nace2.xlsx"),
colNames = TRUE,
sheet = "MONTHLY",
detectDates = F
)
unlink(temp)
rm(temp)
bcsData <- bcsData %>%
mutate_all(as.numeric) %>%
rename(date = X1) %>%
mutate(date = format(convertToDate(date))) %>%
pivot_longer(
cols = 2:ncol(bcsData),
names_to = "key",
values_to = "value"
) %>%
separate(
key,
into = c("country", "series"),
"\\."
) %>%
drop_na() %>%
filter(
series %in% c(
"INDU",
"CONS",
"BUIL",
"RETA",
"SERV",
"ESI",
"EEI"
)
) %>%
mutate(
iso3 = countrycode(country, origin = "eurostat", destination = "iso3c"),
country_de = case_when(
country == "EA" ~ "Euroraum",
country == "EU" ~ "Europäische Union",
.default = countrycode(country, origin = "eurostat", destination = "country.name.de")
),
country_en = case_when(
country == "EA" ~ "Euro area",
country == "EU" ~ "European Union",
.default = countrycode(country, origin = "eurostat", destination = "country.name")
)
)
write.table(
bcsData,
file = paste0("../data_esi.csv"),
append = FALSE,
na = "",
quote = FALSE,
sep = ",",
dec = ".",
row.names = FALSE,
col.names = TRUE
)
bcsDataJson = bcsData %>%
nest(.key = c(series, country, date))
bcsDataJson = bcsData %>%
nest()
)
bcsDataJson = bcsData %>%
nest(by = c(series))
View(bcsDataJson)
View(bcsDataJson[[7]][[6]])
bcsDataJson = bcsData %>%
group_by(series, country, date) %>%
nest()
View(bcsDataJson)
View(bcsDataJson[[4]][[1]])
bcsDataJson = bcsData %>%
group_by(value) %>%
nest()
View(bcsDataJson)
View(bcsDataJson[[2]][[1]])
bcsDataJson = bcsData %>%
group_by(value) %>%
nest() %>%
toJSON()
bcsDataJson = bcsData %>%
group_by(value, date) %>%
nest() %>%
toJSON()
bcsDataJson = bcsData %>%
group_by(value) %>%
nest()
View(bcsDataJson[[2]][[1]])
?list
library(tidyverse)
library(openxlsx)
library(countrycode)
time <- Sys.Date()
time <- format(time, "%y%m")
#Download Dataset - automatic
temp <- tempfile()
time <- as.numeric(time) - 1
download.file(
paste0(
"https://ec.europa.eu/economy_finance/",
"db_indicators/surveys/documents/series/nace2_ecfin_",
time,
"/main_indicators_sa_nace2.zip"
),
temp
)
bcsData <- read.xlsx(
unzip(temp, "main_indicators_nace2.xlsx"),
colNames = TRUE,
sheet = "MONTHLY",
detectDates = F
)
unlink(temp)
rm(temp)
bcsData <- bcsData %>%
mutate_all(as.numeric) %>%
rename(date = X1) %>%
mutate(date = format(convertToDate(date))) %>%
pivot_longer(
cols = 2:ncol(bcsData),
names_to = "key",
values_to = "value"
) %>%
separate(
key,
into = c("country", "series"),
"\\."
) %>%
drop_na() %>%
filter(
series %in% c(
"INDU",
"CONS",
"BUIL",
"RETA",
"SERV",
"ESI",
"EEI"
)
) %>%
mutate(
iso3 = countrycode(country, origin = "eurostat", destination = "iso3c"),
country_de = case_when(
country == "EA" ~ "Euroraum",
country == "EU" ~ "Europäische Union",
.default = countrycode(country, origin = "eurostat", destination = "country.name.de")
),
country_en = case_when(
country == "EA" ~ "Euro area",
country == "EU" ~ "European Union",
.default = countrycode(country, origin = "eurostat", destination = "country.name")
)
)
write.table(
bcsData %>% select(country, iso3, country_de, country_en) |> distinct(),
file = paste0("../data_esi_countries.csv"),
append = FALSE,
na = "",
quote = FALSE,
sep = ",",
dec = ".",
row.names = FALSE,
col.names = TRUE
)
write.table(
bcsData %>% select(-iso3, -country_de, -country_en),
file = paste0("../data_esi_values.csv"),
append = FALSE,
na = "",
quote = FALSE,
sep = ",",
dec = ".",
row.names = FALSE,
col.names = TRUE
)
write.table(
bcsData,
file = paste0("../data_esi.csv"),
append = FALSE,
na = "",
quote = FALSE,
sep = ",",
dec = ".",
row.names = FALSE,
col.names = TRUE
)
# bcsDataJson = bcsData %>%
#   group_by(value) %>%
#   nest() %>%
#   toJSON() %>%
#   write(file = paste0("../data_esi.json"))
bcsData %>% select(-iso3, -country_de, -country_en) %>% spread(key = "Jahr", value = "value")
write.table(
bcsData %>% select(-iso3, -country_de, -country_en) %>% spread(key = "date", value = "value"),
file = paste0("../data_esi_values_wide.csv"),
append = FALSE,
na = "",
quote = FALSE,
sep = ",",
dec = ".",
row.names = FALSE,
col.names = TRUE
)
write.table(
bcsData %>% select(-iso3, -country_de, -country_en) %>% spread(key = "country", value = "value"),
file = paste0("../data_esi_values_wide.csv"),
append = FALSE,
na = "",
quote = FALSE,
sep = ",",
dec = ".",
row.names = FALSE,
col.names = TRUE
)
View(bcsData)
bcsData$value
sum(is.na(bcsData$value))
View(bcsData)
?nest
bcsDataJson = bcsData %>%
group_by(value) %>%
nest(.by = c(country))
bcsDataJson = bcsData %>%
# group_by(value) %>%
nest(.by = c(country))
View(bcsDataJson)
View(bcsDataJson[[2]][[1]])
bcsDataJson = bcsData %>%
# group_by(value) %>%
nest(.by = c(country, iso3, country_de, country_en)) %>%
toJSON()
bcsDataJson = bcsData %>%
# group_by(value) %>%
nest(.by = c(country, iso3, country_de, country_en))
View(bcsDataJson[[5]][[1]])
bcsDataJson = bcsData %>%
# group_by(value) %>%
nest(.by = c(country, iso3, country_de, country_en)) %>%
toJSON() %>%
write(file = paste0("../data_esi.json"))
bcsDataJson = bcsData %>%
# group_by(value) %>%
nest(.by = c(country, iso3, country_de, country_en)) %>%
toJSON(pretty = T) %>%
write(file = paste0("../data_esi.json"))
bcsDataJson = bcsData %>%
# group_by(value) %>%
nest(.by = c(series, country, iso3, country_de, country_en)) %>%
toJSON(pretty = T) %>%
write(file = paste0("../data_esi.json"))
bcsDataJson = bcsData %>%
# group_by(value) %>%
nest(.by = c(series, country, iso3, country_de, country_en)) %>%
toJSON() %>%
write(file = paste0("../data_esi.json"))
bcsDataJson = bcsData %>%
# group_by(value) %>%
nest(.by = c(series, country, iso3, country_de, country_en)) %>%
nest(.by= c(series)) %>%
toJSON(pretty = T) %>%
write(file = paste0("../data_esi.json"))
View(bcsData)
bcsDataJson = bcsData %>%
# group_by(value) %>%
nest(.by = c(series, country, iso3, country_de, country_en)) %>%
nest(.by= c(series))
View(bcsDataJson)
View(bcsDataJson[[2]][[1]])
View((bcsDataJson[[2]][[1]])[[5]][[1]])
bcsDataJson = bcsData %>%
# group_by(value) %>%
nest(.by = c(series, country, iso3, country_de, country_en)) %>%
nest(.by= c(series)) %>%
toJSON(pretty = F) %>%
write(file = paste0("../data_esi.json"))
bcsDataJson = bcsData %>%
# group_by(value) %>%
nest(.by = c(series, country, iso3, country_de, country_en)) %>%
nest(.by= c(series)) %>%
toJSON(pretty = T) %>%
write(file = paste0("../data_esi.json"))
bcsDataJson = bcsData %>%
# group_by(value) %>%
nest(.by = c(series, country, iso3, country_de, country_en)) %>%
nest(.by= c(country, iso3, country_de, country_en)) %>%
toJSON(pretty = T) %>%
write(file = paste0("../data_esi.json"))
bcsDataJson = bcsData %>%
# group_by(value) %>%
nest(.by = c(series, country, iso3, country_de, country_en)) %>%
nest(.by= c(country, iso3, country_de, country_en)) %>%
toJSON(pretty = F) %>%
write(file = paste0("../data_esi.json"))
bcsDataJson = bcsData %>%
# group_by(value) %>%
nest(.by = c(series, country, iso3, country_de, country_en)) %>%
nest(.by= c(country, iso3, country_de, country_en)) %>%
toJSON(pretty = T) %>%
write(file = paste0("../data_esi.json"))
View(bcsData)
library(tidyverse)
library(openxlsx)
library(countrycode)
library(jsonlite)
time <- Sys.Date()
time <- format(time, "%y%m")
temp <- tempfile()
time <- as.numeric(time) - 1
download.file(
paste0(
"https://ec.europa.eu/economy_finance/",
"db_indicators/surveys/documents/series/nace2_ecfin_",
time,
"/main_indicators_sa_nace2.zip"
),
temp
)
bcsData <- read.xlsx(
unzip(temp, "main_indicators_nace2.xlsx"),
colNames = TRUE,
sheet = "MONTHLY",
detectDates = F
)
unlink(temp)
rm(temp)
bcsData <- bcsData %>%
mutate_all(as.numeric) %>%
rename(date = X1) %>%
mutate(date = format(convertToDate(date))) %>%
pivot_longer(
cols = 2:ncol(bcsData),
names_to = "key",
values_to = "value"
) %>%
separate(
key,
into = c("country", "series"),
"//."
) %>%
drop_na() %>%
filter(
series %in% c(
"INDU",
"CONS",
"BUIL",
"RETA",
"SERV",
"ESI",
"EEI"
)
) %>%
mutate(
iso3 = countrycode(country, origin = "eurostat", destination = "iso3c"),
country_de = case_when(
country == "EA" ~ "Euroraum",
country == "EU" ~ "Europäische Union",
.default = countrycode(country, origin = "eurostat", destination = "country.name.de")
),
country_en = case_when(
country == "EA" ~ "Euro area",
country == "EU" ~ "European Union",
.default = countrycode(country, origin = "eurostat", destination = "country.name")
)
)
